name: Price Drop Strategy Workflow

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  run-price-drop-strategy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set Access Token from GitHub Secrets
        run: echo "RUPEEZY_ACCESS_TOKEN=${{ secrets.RUPEEZY_ACCESS_TOKEN }}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ap-south-1

      - name: Run Price Drop Strategy Script
        run: |
          python rupeezy/price_drop.py
        env:
          RUPEEZY_API_KEY: ${{ secrets.RUPEEZY_API_KEY }}
          RUPEEZY_ACCESS_TOKEN: ${{ secrets.RUPEEZY_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1
          RUPEEZY_APPLICATION_ID: dev_3sK5DZDR

      - name: Upload order_ids.txt as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: order_ids
          path: order_ids.txt

      - name: Send Telegram Notification
        if: always()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          message="Beest additional quantity workflow has completed. Status: ${{ job.status }}"
          curl -s -X POST https://api.telegram.org/bot${{ env.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ env.TELEGRAM_CHAT_ID }} \
            -d text="$message"
