name: Run Trade Python Script with Database
on:
  schedule:
    # Runs Monday to Friday at 12:00 PM UTC (5:30 PM IST)
    - cron: '0 12 * * 1-5'
  workflow_dispatch:  # Allows manual triggering for testing
permissions:
  contents: read
  issues: write
jobs:
  run-trade-script:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary requests python-dotenv
      # 4. Run the trade script
      - name: Run Trade Script with DB
        env:
          HOST: ${{ secrets.HOST }}
          PORT: ${{ secrets.PORT }}
          DATABASE: ${{ secrets.DATABASE }}
          USER: ${{ secrets.USER }}
          PASSWORD: ${{ secrets.PASSWORD }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          python Trade_Script_with_DB.py
      # 5. Optional: Upload logs as artifacts for debugging
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trade-logs
          path: |
            trade_log.txt
            error_log.txt
      # 6. Send Telegram notification
      - name: Send Telegram notification
        if: always()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          JOB_STATUS="${{ job.status }}"
          if [ "$JOB_STATUS" = "success" ]; then
            MESSAGE="‚úÖ Trade Script with DB - SUCCESS%0A%0AJob Status: $JOB_STATUS%0AWorkflow: ${{ github.workflow }}%0ARun: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          else
            MESSAGE="‚ùå Trade Script with DB - FAILED%0A%0AJob Status: $JOB_STATUS%0AWorkflow: ${{ github.workflow }}%0ARun: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          fi
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="$MESSAGE" \
            -d parse_mode="HTML"
      # 7. Create an issue on failure
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `üö® Trade Script Failed on ${new Date().toISOString()}`;
            const body = `
            ## Trade Script Execution Failed
            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            **Branch:** ${{ github.ref }}
            **Commit:** ${{ github.sha }}
            Please check the workflow logs for details.
            `;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'automated']
            });
      # 8. Optional: Notify on success
      - name: Notify on success
        if: success()
        run: echo "Trade script executed successfully!"
